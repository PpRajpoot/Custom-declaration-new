// <auto-generated />
using System;
using Infrastructure.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ConsumerContext))]
    partial class ConsumerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.ClsAddresses", b =>
                {
                    b.Property<Guid>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("pincode")
                        .HasColumnType("int");

                    b.HasKey("AddressID");

                    b.ToTable("T_Addresses");

                    b.HasData(
                        new
                        {
                            AddressID = new Guid("c5e3d81b-e445-494d-98c2-2b46d47cf2a1"),
                            Address = "a",
                            City = "a_city",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(3005),
                            UpdatedBy = "",
                            UpdatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(3005),
                            pincode = 0
                        },
                        new
                        {
                            AddressID = new Guid("52176271-763e-49ef-8244-998deac4b262"),
                            Address = "b",
                            City = "b_city",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(3007),
                            UpdatedBy = "",
                            UpdatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(3008),
                            pincode = 0
                        },
                        new
                        {
                            AddressID = new Guid("2e39c92f-f2a0-4198-bc9f-ececf08ac1c1"),
                            Address = "c",
                            City = "c_city",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(3009),
                            UpdatedBy = "",
                            UpdatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(3009),
                            pincode = 0
                        },
                        new
                        {
                            AddressID = new Guid("51efd840-f536-4db7-b4c2-4029f062c62b"),
                            Address = "d",
                            City = "d_city",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(3010),
                            UpdatedBy = "",
                            UpdatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(3011),
                            pincode = 0
                        });
                });

            modelBuilder.Entity("Domain.ClsCompany", b =>
                {
                    b.Property<int>("companyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("companyId"), 1L, 1);

                    b.Property<int>("AddressID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TIN")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("companyId");

                    b.ToTable("T_Company");

                    b.HasData(
                        new
                        {
                            companyId = 1,
                            AddressID = 1,
                            CreatedBy = "",
                            CreatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(2869),
                            Email = "globalConnect@gmail.com",
                            Name = "Global Connect",
                            TIN = 10001L,
                            UpdatedBy = "",
                            UpdatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(2872)
                        },
                        new
                        {
                            companyId = 2,
                            AddressID = 2,
                            CreatedBy = "",
                            CreatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(2874),
                            Email = "swiftImports@gmail.com",
                            Name = "Swift Imports",
                            TIN = 10002L,
                            UpdatedBy = "",
                            UpdatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(2874)
                        },
                        new
                        {
                            companyId = 3,
                            AddressID = 3,
                            CreatedBy = "",
                            CreatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(2875),
                            Email = "exportExperts@gmail.com",
                            Name = "Export Experts",
                            TIN = 10003L,
                            UpdatedBy = "",
                            UpdatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(2875)
                        },
                        new
                        {
                            companyId = 4,
                            AddressID = 4,
                            CreatedBy = "",
                            CreatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(2876),
                            Email = "tradeNavigation@gmail.com",
                            Name = "Trade Navigation",
                            TIN = 10004L,
                            UpdatedBy = "",
                            UpdatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(2877)
                        });
                });

            modelBuilder.Entity("Domain.ClsDeclaration", b =>
                {
                    b.Property<Guid>("DeclarationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeclarationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExportCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImportCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("consigneeTin")
                        .HasColumnType("bigint");

                    b.Property<long>("consignerTin")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("expectedDateOfDelivery")
                        .HasColumnType("datetime2");

                    b.Property<long>("payerTin")
                        .HasColumnType("bigint");

                    b.Property<decimal>("totalCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("transportationMode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeclarationId");

                    b.ToTable("T_Declaration");
                });

            modelBuilder.Entity("Domain.ClsEvent", b =>
                {
                    b.Property<int>("eventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("eventId"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("events")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("eventId");

                    b.ToTable("T_Event");
                });

            modelBuilder.Entity("Domain.ClsGoodsItem", b =>
                {
                    b.Property<int>("GoodsItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GoodsItemId"), 1L, 1);

                    b.Property<string>("CommodityCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeclarationID")
                        .HasColumnType("int");

                    b.Property<decimal>("DutyCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("GoodsItemId");

                    b.ToTable("T_GoodsItem");
                });

            modelBuilder.Entity("Domain.ClsMaterialCommodityMapping", b =>
                {
                    b.Property<long>("CommodityCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CommodityCode"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DutyPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MaterialType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("CommodityCode");

                    b.ToTable("T_MaterialCommodityMapping");

                    b.HasData(
                        new
                        {
                            CommodityCode = 8517L,
                            CreatedBy = "",
                            CreatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(3032),
                            DutyPercentage = 0.4m,
                            MaterialType = "Electronic",
                            Price = 1000m,
                            UpdatedBy = "",
                            UpdatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(3032)
                        },
                        new
                        {
                            CommodityCode = 6101L,
                            CreatedBy = "",
                            CreatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(3034),
                            DutyPercentage = 0.3m,
                            MaterialType = "Clothing",
                            Price = 2000m,
                            UpdatedBy = "",
                            UpdatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(3034)
                        },
                        new
                        {
                            CommodityCode = 7206L,
                            CreatedBy = "",
                            CreatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(3035),
                            DutyPercentage = 0.2m,
                            MaterialType = "Steel",
                            Price = 3000m,
                            UpdatedBy = "",
                            UpdatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(3035)
                        },
                        new
                        {
                            CommodityCode = 3901L,
                            CreatedBy = "",
                            CreatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(3036),
                            DutyPercentage = 0.1m,
                            MaterialType = "Plastic",
                            Price = 4000m,
                            UpdatedBy = "",
                            UpdatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(3037)
                        },
                        new
                        {
                            CommodityCode = 2709L,
                            CreatedBy = "",
                            CreatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(3038),
                            DutyPercentage = 0.5m,
                            MaterialType = "CrudeOil",
                            Price = 5000m,
                            UpdatedBy = "",
                            UpdatedOn = new DateTime(2024, 2, 24, 14, 35, 47, 19, DateTimeKind.Utc).AddTicks(3038)
                        });
                });

            modelBuilder.Entity("Domain.ClsMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("delcaration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("T_Message");
                });
#pragma warning restore 612, 618
        }
    }
}
